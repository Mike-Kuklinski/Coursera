x$setmean()
x<-as.numeric(c(3,4,5,6,7))
x
x$setmean()
x$setmean(5)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
}
makeVector()
makeVector
makeVector()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = "camel")
}
makeVector()
makeVector$set
makeVector()$set
makeVector()$sffff
makeVector()set
makeVector()$dd
makeVector()$set
r<-list(set="po",jim="yo")
r
r$set
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
x
x
x
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
x
makeVector()
x
makeVector(4,5,6,7,8,9)
makeVector(c(4,5,6,7,8,9))
x
makeVector()$get
x
m
r<-as.vector(4,5,6)
r<-as.vector(c(4,5,6))
makeVector()$get
makeVector(r)$get
makeVector(r)$get
x
m
makeVector(5)
m
x
makeVector(5)$set
makeVector(5)$m
makeVector(5)$x
makeVector()$set
makeVector()$set(5)
x
makeVector()$x
makeVector()$set()$x
makeVector()$set()$
makeVector()$set()
set()
makeVector()$set()
makeVector()$set
makeVector()$set(4)
makeVector()$get()
x
makeVector()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
x$getmean()
cachemean(5)
cachemean(5,)
source('~/R Scripts/Prog Assignment 2 Example.R')
f<-numeric(4,5,6,7,8,9)
f<-numeric(c(4,5,6,7,8,9))
?numeric()
f<-numeric(4)
g<-numeric()
g<-is.numeric(4,5,6,7,8)
g<-is.numeric(c(4,5,6,7,8))
g
g<-as.numeric(c(4,5,6,7,8))
g
makeVector(g)
g$getmean()
x$getmean()
cachemean(g)
cachemean(g,...)
cachemean(g, ... = )
cachemean(g, ...)
makevector$getmean()
makevector()$getmean()
makeVector$getmean()
makeVector()$getmean()
makeVector()$get()
g
is.recursive(g)
g<-list(4,5,6,7,8,9)
makeVector(g)
cachemean(g)
debug(cachemean)
cachemean(g)
m
g
g$6
g
g[6]
g$6
g$5
$getmean()
g$getmean()
m
makeVector(g)
m
g$m
g$getmean()
g$list
g$d
source('~/R Scripts/Prog Assignment 2 Example.R')
makeVector(g)
m
g$m
source('~/R Scripts/Prog Assignment 2 Example.R')
makeVector()$getmean()
makeVector()$getffff
g
g<-c(4,5,6,7)
g
h<-g=numeric()
g=numeric()
g<-c(4,5,6,7)
g=numeric()
g<-c(4,5,6,7)
makeVector(g)
g<-makeVector(g)
g
x<-makeVector()
g<-c(4,5,6,7)
g
cachemean(g)
g<-list(4,5,6,7)
cachemean(g)
x
x$getmean()
m
source('~/R Scripts/Prog Assignment 2 Example.R')
cachmean(4)
cachemean(4)
x
x$getmean
x$getmean()
x<-makeVector()
cachemean(4)
cachemean()
cachemean(c(2,3,4))
cachemean(list(2,3,4))
h<-list(2,3,4,5)
h
cachemean(h
cachemean(h)
x
x
x$getmean()
source('~/R Scripts/Prog Assignment 2 Example.R')
source('~/R Scripts/Prog Assignment 2 Example.R')
source('~/R Scripts/Prog Assignment 2 Example.R')
x<-makeVector()
x
x$getmean()
x$set
m
x$m
source('~/R Scripts/Prog Assignment 2 Example.R')
x<-makeVector()
x
x$getmean()
m
x$set()
x$setmean(5)
x$getmean()
x$get()
source('~/R Scripts/Prog Assignment 2 Example.R')
makeVector(c(5,3,2))$get()
x<-makeVector(c(2,3,4,5,6,7))
cachemean(x)
cachemean(x)
cachemean(x)
x$set(6)
cachemean(x)
cachemean(x)
x$set(c(6,7))
cachemean(x)
?matrix()
f<-matrix(c(3,4,51,1),2,2)
f
solve(f)
?solve
source('~/GitHub/Prog_Asgnt_2/ProgrammingAssignment2/cachematrix.R')
we<-matrix(c(3,4,5,2,2,2,4,7,2),3,3))
we<-matrix(c(3,4,5,2,2,2,4,7,2,3,3))
check<-solve(we)
we
we<-matrix(c(3,4,5,2,2,2,4,7,2),3,3))
we<-matrix(c(3,4,5,2,2,2,4,7,2),3,3)
we
check<-solve(we)
check
View(we)
View(cachemean)
d<-makeCacheMatrix(we)
cacheSolve(d)
check
cacheSolve(d)-check
cacheSolve(d)
cacheSolve(d)
d$set_inverse(4)
d$get_inverse()
cacheSolve(d)
d$set(d)
cacheSolve(d)
d
d$set(we)
cacheSolve(d)
source('~/GitHub/Prog_Asgnt_2/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/Prog_Asgnt_2/ProgrammingAssignment2/cachematrix.R')
we
source('~/GitHub/Prog_Asgnt_2/ProgrammingAssignment2/cachematrix.R')
we<-makeCacheMatrix(c(33,4,5,6),2,2)
we<-makeCacheMatrix(c(33,4,5,6),2,2)
source('~/GitHub/Prog_Asgnt_2/ProgrammingAssignment2/cachematrix.R')
test<-matrix(c(2,3,4,5),2,2)
test
check<-makeCacheMatrix(test)
cacheSolve(check)
solve(test)
cacheSolve(check)
check<-makeCacheMatrix(c(2,3,4,5,6,7,8,5,4),3,3)
check<-makeCacheMatrix(c(2,3,4,5,6,7,8,5,4)3,3)
check<-makeCacheMatrix(matrix(c(2,3,4,5,6,7,8,5,4),3,3))
cacheSolve(check)
cacheSolve(check)
source('~/GitHub/Prog_Asgnt_2/ProgrammingAssignment2/cachematrix.R')
remove.packages('RMySQL')
install.packages('RMySQL')
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
remove.packages('RMySQL')
search(RTools)
RTools
install.packages(“RMySQL”, type = “source”)
install.packages('RMySQL', type = 'source')
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
remove.packages('RMySQL')
library(RMySQL)
install.packages('RMySQL', type = 'source')
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
remove.packages('RMySQL')
install.packages('RMySQL', type = 'source')
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
remove.packages('RMySQL')
install.packages('RMySQL')
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
library(DBI)
ucscDb <- dbConnect(RMySQL::MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
library(DBI)
ucscDb <- dbConnect(RMySQL::MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
?RMySQL
ucscDb <- dbConnect(RMySQL::MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
remove.packages('RMySQL')
remove.packages('DBI')
install.packages('RMySQL', type = 'source')
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
ucscDb <- dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
source("http://bioconductor.org/biocLite.R")
biocLite('rhdf5')
con = url('http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en')
htmlCode=readLines(con)
close(con = )
close(con)
htmlCode
library(XML)
library(httr)
?oauth_endpoints()
j<-oauth_endpoints("github")
j
source('~/R Scripts/Get_Data_Quiz2_Question_1.R')
source('~/R Scripts/Get_Data_Quiz2_Question_1.R')
source('~/R Scripts/PA1_templete.R')
unzip('~/PA1/Activity.zip')
?unzip
source('~/R Scripts/PA1_templete.R')
histogram(day_counts,xlab="Steps per Day", main='Histogram of Steps Taken per Day')
plot<-histogram(day_counts,xlab="Steps per Day", main='Histogram of Steps Taken per Day')
plot
print(plot)
source('~/R Scripts/PA1_templete.R')
source('~/R Scripts/PA1_templete.R')
?download.file
source('~/R Scripts/PA1_templete.R')
day_count_mean
round(day_count_mean)
?mean
step_counts <-tapply(rawdata$steps,rawdata$interval,mean)
step_counts
step_counts <-tapply(rawdata$steps,rawdata$interval,mean,na.rm=TRUE)
step_counts
xyplot.ts(step_counts)
max(step_counts)
max(step_counts(name))
seq(0,(24*60),5)
length(seq(0,(24*60),5))
daily_activity<-data.frame(x=step_counts,y=seq(0,(24*60),5))
names(step_counts)
name(step_counts[3])
names(step_counts[3])
name(step_counts[max(step_counts)])
names(step_counts[max(step_counts)])
rawdata$interval
names(step_counts[max(step_counts)])
max(step_counts)
step_counts
class(step_counts)
max(step_counts)
?index
match(max(step_counts),step_counts)
names(step_counts[match(max(step_counts),step_counts)])
xyplot(step_counts, xlab='Time in 5-Minute Intervals throughout the day', ylab='Average number of steps',main='Average Daily Activity Pattern')
xyplot(step_counts)
xyplot(step_counts)
xyplot(unique(rawdata$interval),step_counts)
rawdata[is.na(rawdata)]
length(rawdata[is.na(rawdata[,1])]
length(rawdata[is.na(rawdata[,1])])
length(rawdata[is.na(rawdata[,1]),])
length(rawdata[is.na(rawdata[,1]),1])
length(rawdata[is.na(rawdata[,2]),1])
length(rawdata[is.na(rawdata[,3]),1])
length(rawdata[is.na(rawdata[,1]),1])
step_counts[name=rawdata$interval[1]]
rawdata$interval[1]
step_counts[rawdata$interval[1]]
rawdata$interval[2]
as.character(rawdata$interval[2])
name<-as.character(rawdata$interval[2])
step_counts[name]
rawdata2 <- rawdata
for(i in seq_along(rawdata$steps)){
if(is.na(rawdata[i,1])){
rawdata2[i,1]<-step_counts[as.character(rawdata$interval[i])]
}
}
head(rawdata2)
day_counts2 <- tapply(rawdata2$steps,rawdata2$date,sum)
data_plot2 <- histogram(day_counts2,xlab="Steps per Day", main='New Histogram of Steps Taken per Day')
print(data_plot2)
rawdata2[is.an(rawdata2[,1]),]
rawdata2[is.na(rawdata2[,1]),]
day_counts2 <- tapply(rawdata2$steps,rawdata2$date,sum)
data_plot2 <- histogram(day_counts2,xlab="Steps per Day", main='New Histogram of Steps Taken per Day')
print(data_plot2)
#Code to calculate the new mean and median of the number of steps each day:
day_count_mean2 <- mean(day_counts2)
day_count_median2 <- median(day_counts2)
weekdays(rawdata2$date)
rawdata2$date <- as.Date(rawdata2$date)
weekdays(rawdata2$date)
rawdata2$week <- weekdays(rawdata2$date)
head(rawdata2)
?weekdays
library(knitr)
getwd()
knit2html("PATemplate1.Rmd")
knit2html("PA1Template1.Rmd")
getwd()
knit2html("PA1_template.Rmd")
browseURL("PA1_template.html")
?as.integer
r<-4050.33434
round(r)
round(r,digits=2)
url<-'http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip'
url<-'http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip'
suppressWarnings(if(!file.exists("PA1")){dir.create("~/PA1")})
download.file(url, destfile= "~/PA1/Activity.zip")
unzip('~/PA1/Activity.zip')
rawdata <- read.csv('~/Activity.csv')
library(knitr)
url<-'http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip'
suppressWarnings(
if(!file.exists("PA1")){
dir.create("~/PA1")
download.file(url, destfile= "~/PA1/Activity.zip")
unzip('~/PA1/Activity.zip')
}
)
```
```{R}
# Read file and store accordingly. Preview data
rawdata <- read.csv('~/Activity.csv')
head(rawdata)
?unzip
unzip('~/PA1/Activity.zip')
nosim<-1000
n <- 10
rnorm(nosim*n)
matrix(rnorm(nosim*n),nosim)
apply(matrix(rnorm(nosim*n),nosim),1,mean)
?apply
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sqrt(9)
1/sqrt(1000)
1/sqrt(10)
ppois(14,15)
ppois(16,15)
ppois(10,(5*3))
getwd()
setwd('./R Scripts/Coursera/GetData_CourseProject/GetData_CourseProject')
source('~/R Scripts/Coursera/GetData_CourseProject/GetData_CourseProject/run_analysis.R')
names(tidy_data)
source('~/R Scripts/Coursera/GetData_CourseProject/GetData_CourseProject/run_analysis.R')
g<-read.table('tidydata.txt',header = True)
g<-read.table('TidyData.txt',header = True)
getwd()
g<-read.table('TidyData.txt',header = TRUE)
View(g)
